<?php

/**
 * This is the model base class for the table "evaluacion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Evaluacion".
 *
 * Columns in table "evaluacion" available as properties of the model,
 * followed by relations of table "evaluacion" available as properties of the model.
 *
 * @property integer $id
 * @property integer $curso_id
 * @property string $fecha
 * @property string $nombre
 * @property string $observacion
 *
 * @property Calificacion[] $calificacions
 * @property Curso $curso
 */
  
abstract class BaseEvaluacion extends GxActiveRecord {

        public $fecha_inicio;
        public $fecha_termino;
       
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'evaluacion';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Evaluacion|Evaluacions', $n);
	}

	public static function representingColumn() {
		return 'fecha';
	}

	public function rules() {
		return array(
			array('curso_id', 'required'),
			array('curso_id', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>255),
			array('fecha, observacion', 'safe'),
			array('fecha, nombre, observacion', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, curso_id, fecha, nombre, observacion, fecha_inicio, fecha_termino', 'safe', 'on'=>'search'),
		);                        
	}

	public function relations() {
		return array(
			'calificacions' => array(self::HAS_MANY, 'Calificacion', 'evaluacion_id'),
			'curso' => array(self::BELONGS_TO, 'Curso', 'curso_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'curso_id' => null,
			'fecha' => Yii::t('app', 'Fecha'),
			'nombre' => Yii::t('app', 'Nombre'),
			'observacion' => Yii::t('app', 'Observacion'),
			'calificacions' => null,
			'curso' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('curso_id', $this->curso_id);
                $criteria->compare('fecha', Yii::app()->format->FormatoFechaBD($this->fecha), true);
                if(!empty($this->fecha_inicio) && !empty($this->fecha_termino))   
                        $criteria->addBetweenCondition('fecha', Yii::app()->format->FormatoFechaBD($this->fecha_inicio), Yii::app()->format->FormatoFechaBD($this->fecha_termino));
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('observacion', $this->observacion, true);
                
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        
        public function behaviors()
        {
            return array('datetimeI18NBehavior' => array('class' => 'ext.DateTimeI18NBehavior.DateTimeI18NBehavior'));
        }
  
        
}