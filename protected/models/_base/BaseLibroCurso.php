<?php

/**
 * This is the model base class for the table "libro_curso".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "LibroCurso".
 *
 * Columns in table "libro_curso" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $actividad_id
 * @property string $actividad
 * @property string $fecha_inicio
 * @property string $fecha_termino
 * @property integer $curso_id
 * @property integer $curso_semestre
 * @property integer $curso_anio
 * @property string $curso_nombre
 * @property integer $evaluacion_id
 * @property string $evaluacion_fecha
 * @property string $evaluacion_nombre
 * @property string $evaluacion_observacion
 * @property integer $alumno_id
 * @property string $alumno_nombre
 * @property string $alumno_run
 * @property integer $calificacion_id
 * @property double $calificacion_nota
 *
 */
  
abstract class BaseLibroCurso extends GxActiveRecord {

        public $fecha_inicio_inicio;
        public $fecha_inicio_termino;
        public $fecha_termino_inicio;
        public $fecha_termino_termino;
        public $evaluacion_fecha_inicio;
        public $evaluacion_fecha_termino;
       
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'libro_curso';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Libro Curso|Libro Cursos', $n);
	}

	public static function representingColumn() {
		return 'actividad';
	}

	public function rules() {
		return array(
			array('actividad_id, curso_id, curso_semestre, curso_anio, evaluacion_id, alumno_id, calificacion_id', 'numerical', 'integerOnly'=>true),
			array('calificacion_nota', 'numerical'),
			array('actividad, curso_nombre, evaluacion_nombre, alumno_nombre', 'length', 'max'=>255),
			array('alumno_run', 'length', 'max'=>12),
			array('fecha_inicio, fecha_termino, evaluacion_fecha, evaluacion_observacion', 'safe'),
			array('actividad_id, actividad, fecha_inicio, fecha_termino, curso_id, curso_semestre, curso_anio, curso_nombre, evaluacion_id, evaluacion_fecha, evaluacion_nombre, evaluacion_observacion, alumno_id, alumno_nombre, alumno_run, calificacion_id, calificacion_nota', 'default', 'setOnEmpty' => true, 'value' => null),
			array('actividad_id, actividad, fecha_inicio, fecha_termino, curso_id, curso_semestre, curso_anio, curso_nombre, evaluacion_id, evaluacion_fecha, evaluacion_nombre, evaluacion_observacion, alumno_id, alumno_nombre, alumno_run, calificacion_id, calificacion_nota, fecha_inicio_inicio, fecha_inicio_termino, fecha_termino_inicio, fecha_termino_termino, evaluacion_fecha_inicio, evaluacion_fecha_termino', 'safe', 'on'=>'search'),
		);                        
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'actividad_id' => Yii::t('app', 'Actividad'),
			'actividad' => Yii::t('app', 'Actividad'),
			'fecha_inicio' => Yii::t('app', 'Fecha Inicio'),
			'fecha_termino' => Yii::t('app', 'Fecha Termino'),
			'curso_id' => Yii::t('app', 'Curso'),
			'curso_semestre' => Yii::t('app', 'Curso Semestre'),
			'curso_anio' => Yii::t('app', 'Curso Anio'),
			'curso_nombre' => Yii::t('app', 'Curso Nombre'),
			'evaluacion_id' => Yii::t('app', 'Evaluacion'),
			'evaluacion_fecha' => Yii::t('app', 'Evaluacion Fecha'),
			'evaluacion_nombre' => Yii::t('app', 'Evaluacion Nombre'),
			'evaluacion_observacion' => Yii::t('app', 'Evaluacion Observacion'),
			'alumno_id' => Yii::t('app', 'Alumno'),
			'alumno_nombre' => Yii::t('app', 'Alumno Nombre'),
			'alumno_run' => Yii::t('app', 'Alumno Run'),
			'calificacion_id' => Yii::t('app', 'Calificacion'),
			'calificacion_nota' => Yii::t('app', 'Calificacion Nota'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('actividad_id', $this->actividad_id);
		$criteria->compare('actividad', $this->actividad, true);
                $criteria->compare('fecha_inicio', Yii::app()->format->FormatoFechaBD($this->fecha_inicio), true);
                if(!empty($this->fecha_inicio_inicio) && !empty($this->fecha_inicio_termino))   
                        $criteria->addBetweenCondition('fecha_inicio', Yii::app()->format->FormatoFechaBD($this->fecha_inicio_inicio), Yii::app()->format->FormatoFechaBD($this->fecha_inicio_termino));
                $criteria->compare('fecha_termino', Yii::app()->format->FormatoFechaBD($this->fecha_termino), true);
                if(!empty($this->fecha_termino_inicio) && !empty($this->fecha_termino_termino))   
                        $criteria->addBetweenCondition('fecha_termino', Yii::app()->format->FormatoFechaBD($this->fecha_termino_inicio), Yii::app()->format->FormatoFechaBD($this->fecha_termino_termino));
		$criteria->compare('curso_id', $this->curso_id);
		$criteria->compare('curso_semestre', $this->curso_semestre);
		$criteria->compare('curso_anio', $this->curso_anio);
		$criteria->compare('curso_nombre', $this->curso_nombre, true);
		$criteria->compare('evaluacion_id', $this->evaluacion_id);
                $criteria->compare('evaluacion_fecha', Yii::app()->format->FormatoFechaBD($this->evaluacion_fecha), true);
                if(!empty($this->evaluacion_fecha_inicio) && !empty($this->evaluacion_fecha_termino))   
                        $criteria->addBetweenCondition('evaluacion_fecha', Yii::app()->format->FormatoFechaBD($this->evaluacion_fecha_inicio), Yii::app()->format->FormatoFechaBD($this->evaluacion_fecha_termino));
		$criteria->compare('evaluacion_nombre', $this->evaluacion_nombre, true);
		$criteria->compare('evaluacion_observacion', $this->evaluacion_observacion, true);
		$criteria->compare('alumno_id', $this->alumno_id);
		$criteria->compare('alumno_nombre', $this->alumno_nombre, true);
		$criteria->compare('alumno_run', $this->alumno_run, true);
		$criteria->compare('calificacion_id', $this->calificacion_id);
		$criteria->compare('calificacion_nota', $this->calificacion_nota);
                
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        
        public function behaviors()
        {
            return array('datetimeI18NBehavior' => array('class' => 'ext.DateTimeI18NBehavior.DateTimeI18NBehavior'));
        }
  
        
}