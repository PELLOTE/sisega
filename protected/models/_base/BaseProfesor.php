<?php

/**
 * This is the model base class for the table "profesor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Profesor".
 *
 * Columns in table "profesor" available as properties of the model,
 * followed by relations of table "profesor" available as properties of the model.
 *
 * @property integer $id
 * @property string $nombre
 * @property integer $user_id
 * @property string $run
 * @property string $email
 *
 * @property Curso[] $cursos
 * @property User $user
 */
  
abstract class BaseProfesor extends GxActiveRecord {

       
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'profesor';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Profesor|Profesors', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('user_id', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>100),
			array('run', 'length', 'max'=>12),
			array('email', 'length', 'max'=>200),
			array('nombre, user_id, run, email', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, nombre, user_id, run, email', 'safe', 'on'=>'search'),
		);                        
	}

	public function relations() {
		return array(
			'cursos' => array(self::HAS_MANY, 'Curso', 'profesor_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nombre' => Yii::t('app', 'Nombre'),
			'user_id' => null,
			'run' => Yii::t('app', 'Run'),
			'email' => Yii::t('app', 'Email'),
			'cursos' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('run', $this->run, true);
		$criteria->compare('email', $this->email, true);
                
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        
  
        
}