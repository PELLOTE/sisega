<?php

/**
 * This is the model base class for the table "calificacion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Calificacion".
 *
 * Columns in table "calificacion" available as properties of the model,
 * followed by relations of table "calificacion" available as properties of the model.
 *
 * @property integer $id
 * @property integer $alumno_id
 * @property integer $evaluacion_id
 * @property integer $curso_id
 * @property double $nota
 *
 * @property Alumno $alumno
 * @property Curso $curso
 * @property Evaluacion $evaluacion
 */
  
abstract class BaseCalificacion extends GxActiveRecord {

       
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'calificacion';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Calificacion|Calificacions', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('alumno_id, evaluacion_id', 'required'),
			array('alumno_id, evaluacion_id, curso_id', 'numerical', 'integerOnly'=>true),
			array('nota', 'numerical','min'=>1,'max'=>7),
                        array('curso_id, nota', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, alumno_id, evaluacion_id, curso_id, nota', 'safe', 'on'=>'search'),
		);                        
	}

	public function relations() {
		return array(
			'alumno' => array(self::BELONGS_TO, 'Alumno', 'alumno_id'),
			'curso' => array(self::BELONGS_TO, 'Curso', 'curso_id'),
			'evaluacion' => array(self::BELONGS_TO, 'Evaluacion', 'evaluacion_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'alumno_id' => null,
			'evaluacion_id' => null,
			'curso_id' => null,
			'nota' => Yii::t('app', 'Nota'),
			'alumno' => null,
			'curso' => null,
			'evaluacion' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('alumno_id', $this->alumno_id);
		$criteria->compare('evaluacion_id', $this->evaluacion_id);
		$criteria->compare('curso_id', $this->curso_id);
		$criteria->compare('nota', $this->nota);
                
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        
  
        
}